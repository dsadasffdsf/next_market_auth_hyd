"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/auth/page",{

/***/ "(app-pages-browser)/./src/utils/validator.tsx":
/*!*********************************!*\
  !*** ./src/utils/validator.tsx ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   validationError: function() { return /* binding */ validationError; }\n/* harmony export */ });\nvar validationError = function(param) {\n    var username = param.username, password = param.password, setUsernameError = param.setUsernameError, setPasswordError = param.setPasswordError;\n    var validateForm = {\n        valUsername: true,\n        valPassword: true\n    };\n    var usernameRegex = /^[a-zA-Z0-9._-]{3,}$/; // Минимум 3 символа\n    var passwordRegex = /^.{6,}$/; // Минимум 6 символов\n    if (!username) {\n        validateForm.valUsername = false;\n        setUsernameError(\"Поле username не должно быть пустым!\");\n    } else if (!usernameRegex.test(username)) {\n        validateForm.valUsername = false;\n        setUsernameError(\"Поле username должно содержать минимум 3 символа!\");\n    } else {\n        validateForm.valUsername = true;\n        setUsernameError(\"\");\n    }\n    if (!password) {\n        validateForm.valPassword = false;\n        setPasswordError(\"Поле password не должно быть пустым!\");\n    } else if (!passwordRegex.test(password)) {\n        validateForm.valPassword = false;\n        setPasswordError(\"Поле password должно содержать минимум 6 символов!\");\n    } else {\n        validateForm.valPassword = true;\n        setPasswordError(\"\");\n    }\n    return {\n        validateForm: validateForm\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy91dGlscy92YWxpZGF0b3IudHN4IiwibWFwcGluZ3MiOiI7Ozs7QUFPTyxJQUFNQSxrQkFBa0I7UUFDN0JDLGlCQUFBQSxVQUNBQyxpQkFBQUEsVUFDQUMseUJBQUFBLGtCQUNBQyx5QkFBQUE7SUFFQSxJQUFJQyxlQUFlO1FBQUVDLGFBQWE7UUFBTUMsYUFBYTtJQUFLO0lBRTFELElBQU1DLGdCQUFnQix3QkFBd0Isb0JBQW9CO0lBQ2xFLElBQU1DLGdCQUFnQixXQUFXLHFCQUFxQjtJQUV0RCxJQUFJLENBQUNSLFVBQVU7UUFDYkksYUFBYUMsV0FBVyxHQUFHO1FBQzNCSCxpQkFBaUI7SUFDbkIsT0FBTyxJQUFJLENBQUNLLGNBQWNFLElBQUksQ0FBQ1QsV0FBVztRQUN4Q0ksYUFBYUMsV0FBVyxHQUFHO1FBQzNCSCxpQkFBaUI7SUFDbkIsT0FBTztRQUNMRSxhQUFhQyxXQUFXLEdBQUc7UUFDM0JILGlCQUFpQjtJQUNuQjtJQUVBLElBQUksQ0FBQ0QsVUFBVTtRQUNiRyxhQUFhRSxXQUFXLEdBQUc7UUFDM0JILGlCQUFpQjtJQUNuQixPQUFPLElBQUksQ0FBQ0ssY0FBY0MsSUFBSSxDQUFDUixXQUFXO1FBQ3hDRyxhQUFhRSxXQUFXLEdBQUc7UUFDM0JILGlCQUFpQjtJQUNuQixPQUFPO1FBQ0xDLGFBQWFFLFdBQVcsR0FBRztRQUMzQkgsaUJBQWlCO0lBQ25CO0lBRUEsT0FBTztRQUFFQyxjQUFBQTtJQUFhO0FBQ3hCLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL3V0aWxzL3ZhbGlkYXRvci50c3g/Zjk0ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbnRlcmZhY2UgVmFsaWRhdGlvbkVycm9yIHtcclxuICB1c2VybmFtZTogc3RyaW5nO1xyXG4gIHBhc3N3b3JkOiBzdHJpbmc7XHJcbiAgc2V0VXNlcm5hbWVFcnJvcjogUmVhY3QuRGlzcGF0Y2g8UmVhY3QuU2V0U3RhdGVBY3Rpb248c3RyaW5nPj47XHJcbiAgc2V0UGFzc3dvcmRFcnJvcjogUmVhY3QuRGlzcGF0Y2g8UmVhY3QuU2V0U3RhdGVBY3Rpb248c3RyaW5nPj47XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCB2YWxpZGF0aW9uRXJyb3IgPSAoe1xyXG4gIHVzZXJuYW1lLFxyXG4gIHBhc3N3b3JkLFxyXG4gIHNldFVzZXJuYW1lRXJyb3IsXHJcbiAgc2V0UGFzc3dvcmRFcnJvcixcclxufTogVmFsaWRhdGlvbkVycm9yKSA9PiB7XHJcbiAgbGV0IHZhbGlkYXRlRm9ybSA9IHsgdmFsVXNlcm5hbWU6IHRydWUsIHZhbFBhc3N3b3JkOiB0cnVlIH07XHJcblxyXG4gIGNvbnN0IHVzZXJuYW1lUmVnZXggPSAvXlthLXpBLVowLTkuXy1dezMsfSQvOyAvLyDQnNC40L3QuNC80YPQvCAzINGB0LjQvNCy0L7Qu9CwXHJcbiAgY29uc3QgcGFzc3dvcmRSZWdleCA9IC9eLns2LH0kLzsgLy8g0JzQuNC90LjQvNGD0LwgNiDRgdC40LzQstC+0LvQvtCyXHJcblxyXG4gIGlmICghdXNlcm5hbWUpIHtcclxuICAgIHZhbGlkYXRlRm9ybS52YWxVc2VybmFtZSA9IGZhbHNlO1xyXG4gICAgc2V0VXNlcm5hbWVFcnJvcign0J/QvtC70LUgdXNlcm5hbWUg0L3QtSDQtNC+0LvQttC90L4g0LHRi9GC0Ywg0L/Rg9GB0YLRi9C8IScpO1xyXG4gIH0gZWxzZSBpZiAoIXVzZXJuYW1lUmVnZXgudGVzdCh1c2VybmFtZSkpIHtcclxuICAgIHZhbGlkYXRlRm9ybS52YWxVc2VybmFtZSA9IGZhbHNlO1xyXG4gICAgc2V0VXNlcm5hbWVFcnJvcign0J/QvtC70LUgdXNlcm5hbWUg0LTQvtC70LbQvdC+INGB0L7QtNC10YDQttCw0YLRjCDQvNC40L3QuNC80YPQvCAzINGB0LjQvNCy0L7Qu9CwIScpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICB2YWxpZGF0ZUZvcm0udmFsVXNlcm5hbWUgPSB0cnVlO1xyXG4gICAgc2V0VXNlcm5hbWVFcnJvcignJyk7XHJcbiAgfVxyXG5cclxuICBpZiAoIXBhc3N3b3JkKSB7XHJcbiAgICB2YWxpZGF0ZUZvcm0udmFsUGFzc3dvcmQgPSBmYWxzZTtcclxuICAgIHNldFBhc3N3b3JkRXJyb3IoJ9Cf0L7Qu9C1IHBhc3N3b3JkINC90LUg0LTQvtC70LbQvdC+INCx0YvRgtGMINC/0YPRgdGC0YvQvCEnKTtcclxuICB9IGVsc2UgaWYgKCFwYXNzd29yZFJlZ2V4LnRlc3QocGFzc3dvcmQpKSB7XHJcbiAgICB2YWxpZGF0ZUZvcm0udmFsUGFzc3dvcmQgPSBmYWxzZTtcclxuICAgIHNldFBhc3N3b3JkRXJyb3IoJ9Cf0L7Qu9C1IHBhc3N3b3JkINC00L7Qu9C20L3QviDRgdC+0LTQtdGA0LbQsNGC0Ywg0LzQuNC90LjQvNGD0LwgNiDRgdC40LzQstC+0LvQvtCyIScpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICB2YWxpZGF0ZUZvcm0udmFsUGFzc3dvcmQgPSB0cnVlO1xyXG4gICAgc2V0UGFzc3dvcmRFcnJvcignJyk7XHJcbiAgfVxyXG5cclxuICByZXR1cm4geyB2YWxpZGF0ZUZvcm0gfTtcclxufTsiXSwibmFtZXMiOlsidmFsaWRhdGlvbkVycm9yIiwidXNlcm5hbWUiLCJwYXNzd29yZCIsInNldFVzZXJuYW1lRXJyb3IiLCJzZXRQYXNzd29yZEVycm9yIiwidmFsaWRhdGVGb3JtIiwidmFsVXNlcm5hbWUiLCJ2YWxQYXNzd29yZCIsInVzZXJuYW1lUmVnZXgiLCJwYXNzd29yZFJlZ2V4IiwidGVzdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/validator.tsx\n"));

/***/ })

});